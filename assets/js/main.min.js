/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/config/index.js":
/*!*****************************!*\
  !*** ./src/config/index.js ***!
  \*****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/**
 * @name: 主题配置，运行环境，浏览器
 * @author: SunSeekerX
 * @Date: 2020-05-24 12:24:52
 * @LastEditors: SunSeekerX
 * @LastEditTime: 2020-05-31 12:43:44
 */
/* harmony default export */ __webpack_exports__["default"] = ({
  // baiduTongji: {
  //   // 百度统计key
  //   key: '3f0d7a82297c929467637543290d6e37',
  // },
  baiduTongji: false,

  /**
   * @name valine配置
   * @more https://valine.js.org/configuration.html
   */
  valineOptions: {
    // Valine 的初始化挂载器。可以是一个CSS 选择器，也可以是一个实际的HTML元素。
    el: '#vcomments',
    // leancloud 应用 appid
    appId: '4zCOQmtHXSOvLlPnTV108NOw-gzGzoHsz',
    // leancloud 应用 appkey
    appKey: 'sMdusoM6SbN9tgyCCKzTIwif',
    // 评论框占位提示符。
    placeholder: '请您理智发言，共建美好社会！',
    // Gravatar 头像展示方式。
    avatar: 'mm',
    // 当前文章页路径，用于区分不同的文章页，以保证正确读取该文章页下的评论列表。
    path: window.location.pathname,
    // 文章访问量统计
    visitor: true,
    // 代码高亮
    highlight: true,
    // 是否记录评论者IP
    recordIP: true
  }
});

/***/ }),

/***/ "./src/js/Baidu.js":
/*!*************************!*\
  !*** ./src/js/Baidu.js ***!
  \*************************/
/*! exports provided: initBaiduTongji */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initBaiduTongji", function() { return initBaiduTongji; });
/* harmony import */ var _config_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/config/index */ "./src/config/index.js");
/**
 * @name: 百度相关的服务
 * @author: SunSeekerX
 * @Date: 2020-05-28 17:57:58
 * @LastEditors: SunSeekerX
 * @LastEditTime: 2020-05-28 18:00:46
 */

function initBaiduTongji() {
  var _hmt = _hmt || [];

  (function () {
    var hm = document.createElement('script');
    hm.src = `https://hm.baidu.com/hm.js?${_config_index__WEBPACK_IMPORTED_MODULE_0__["default"].baiduTongji.key}`;
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(hm, s);
  })();
}

/***/ }),

/***/ "./src/js/Comment.js":
/*!***************************!*\
  !*** ./src/js/Comment.js ***!
  \***************************/
/*! exports provided: initValine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initValine", function() { return initValine; });
/* harmony import */ var _js_utils_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/js/utils/index */ "./src/js/utils/index.js");
/**
 * @name:
 * @author: SunSeekerX
 * @Date: 2020-05-28 18:05:10
 * @LastEditors: SunSeekerX
 * @LastEditTime: 2020-05-29 13:55:11
 */

/**
 * @name 初始化Valine
 */

function initValine(valineOptions) {
  if ($('#vcomments').length !== 0) {
    if (typeof window.Valine === 'undefined') {
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_0__["loadScript"])('//unpkg.com/valine/dist/Valine.min.js', () => {
        new Valine(valineOptions);
      });
    } else {
      new Valine(valineOptions);
    }
  }
}

/***/ }),

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _config_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/config/index */ "./src/config/index.js");
/* harmony import */ var _Baidu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Baidu */ "./src/js/Baidu.js");
/* harmony import */ var _Comment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Comment */ "./src/js/Comment.js");
/* harmony import */ var _js_utils_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/js/utils/index */ "./src/js/utils/index.js");
/**
 * @name: 
 * @author: SunSeekerX
 * @Date: 2020-05-28 17:23:32
 * @LastEditors: SunSeekerX
 * @LastEditTime: 2020-05-29 15:00:19
 */




window.pivot = {
  init: init
};
var _prevent_scroll = false;

function init(config) {
  var _touch = 'ontouchstart' in window || 'onmsgesturechange' in window || !!navigator.MaxTouchPoints;

  var _targets;

  var _target;

  var _container;

  var i = 0;
  var j = 0;

  if (typeof config === 'undefined' || typeof config !== 'object') {
    return;
  }

  if ('touch' in config) {
    _touch = config.touch;
  }

  if ('selector' in config) {
    _targets = document.querySelectorAll(config.selector);
  }

  if (_targets.length > 0) {
    i = _targets.length;

    for (; i > j; j++) {
      _target = _targets[j];
      _container = _target.parentNode;
      handleHover(_target, _container, config, _touch);
    }
  }
}

function handleHover(target, container, config, touch) {
  var _shadow;

  var _shine;

  var sensitivity = 0;
  var perspectiveProp = getProp(['perspective', 'webkitPerspective', 'mozPerspective']);
  var transformStyleProp = getProp(['transformStyle', 'webkitTransformStyle', 'mozTransformStyle']);
  var transformProp = getProp(['transform', 'webkitTransform', 'mozTransform']);
  var backfaceVisProp = getProp(['backfaceVisibility', 'webkitBackfaceVisibility', 'mozBackfaceVisibility']);
  var willChangeProp = getProp(['willChange']);
  var boxShadowProp = getProp(['boxShadow', 'webkitBoxShadow', 'mozBoxShadow']);
  var userSelectProp = getProp(['userSelect', 'webkitUserSelect', 'mozUserSelect']);
  var transitionPropertyProp = getProp(['transitionProperty', 'webkitTransitionProperty', 'mozTransitionProperty']);
  var transitionDurationProp = getProp(['transitionDuration', 'webkitTransitionDuration', 'mozTransitionDuration']);
  var transitionDelayProp = getProp(['transitionDelay', 'webkitTransitionDelay', 'mozTransitionDelay']);
  var transitionTimingProp = getProp(['transitionTimingFunction', 'webkitTransitionTimingFunction', 'mozTransitionTimingFunction']);

  if (config.perspective && typeof config.perspective === 'number') {
    container.style[perspectiveProp] = config.perspective + 'px';
    target.style[perspectiveProp] = config.perspective + 'px';
  } else {
    container.style[perspectiveProp] = '1000px';
    target.style[perspectiveProp] = '1000px';
  }

  container.style[transformStyleProp] = 'preserve-3d';
  target.style[transformStyleProp] = 'preserve-3d';
  container.style[userSelectProp] = 'none';
  target.style[userSelectProp] = 'none';
  target.style[transformProp] = 'rotateY(0deg) rotateX(0deg)';

  if (config.sensitivity && typeof config.sensitivity === 'number') {
    sensitivity = config.sensitivity;
  } else {
    sensitivity = 20;
  }

  if (touch) {
    target.style[backfaceVisProp] = 'hidden';
  }

  if (config.position && typeof config.position === 'object') {
    target.style.position = config.position.method;
    target.style.zIndex = config.position.zindex;
  } else {
    target.style.position = 'relative';
  }

  if (config.transition && typeof config.transition === 'object') {
    target.style[willChangeProp] = config.transition.prop;
    target.style[transitionPropertyProp] = config.transition.prop;
    target.style[transitionDurationProp] = getUnit(config.transition.duration);
    target.style[transitionTimingProp] = getTFunc(config.transition.timing);
  } else {
    target.style[willChangeProp] = 'transform';
    target.style[transitionPropertyProp] = 'transform';
    target.style[transitionDurationProp] = '0.2s';
    target.style[transitionTimingProp] = 'cubic-bezier(0.3, 1, 0.2, 1)';
  }

  if (config.shadow) {
    _shadow = document.createElement('div');
    _shadow.className = 'shadow';
    _shadow.style.position = 'absolute';
    _shadow.style.top = '5%';
    _shadow.style.left = '5%';
    _shadow.style.bottom = '5%';
    _shadow.style.right = '5%';
    _shadow.style.zIndex = 1;
    _shadow.style[transformProp] = 'translateZ(-2px)';
    _shadow.style[boxShadowProp] = '0 8px 30px rgba(14, 21, 47, 0.6)';

    if (config.transition && typeof config.transition === 'object') {
      _shadow.style[willChangeProp] = 'box-shadow, transform';
      _shadow.style[transitionPropertyProp] = 'box-shadow';
      _shadow.style[transitionDurationProp] = getUnit(config.transition.duration);
      _shadow.style[transitionTimingProp] = getTFunc(config.transition.timing);
    } else {
      _shadow.style[willChangeProp] = 'box-shadow, transform';
      _shadow.style[transitionPropertyProp] = 'box-shadow';
      _shadow.style[transitionDurationProp] = '0.2s';
      _shadow.style[transitionTimingProp] = 'cubic-bezier(0.3, 1, 0.2, 1)';
    }

    target.appendChild(_shadow);
  }

  if (config.shine) {
    _shine = document.createElement('div');
    _shine.className = 'shine';
    _shine.style.position = 'absolute';
    _shine.style.top = 0;
    _shine.style.left = 0;
    _shine.style.bottom = 0;
    _shine.style.right = 0;
    _shine.style.zIndex = 9;
    _shine.style.opacity = 0;

    if (config.transition && typeof config.transition === 'object') {
      _shine.style[willChangeProp] = 'opacity, transform';
      _shine.style[transitionPropertyProp] = 'opacity';
      _shine.style[transitionDurationProp] = getUnit(config.transition.duration);
      _shine.style[transitionTimingProp] = getTFunc(config.transition.timing);
    } else {
      _shine.style[willChangeProp] = 'box-shadow, transform';
      _shine.style[transitionPropertyProp] = 'box-shadow';
      _shine.style[transitionDurationProp] = '0.2s';
      _shine.style[transitionTimingProp] = 'cubic-bezier(0.3, 1, 0.2, 1)';
    }

    target.appendChild(_shine);
  }

  if (config.child3D && typeof config.child3D === 'number') {
    var p = _target.children.length;
    var q = 0;

    for (; p > q; q++) {
      if (!config.shadow || target.children[q].className !== _shadow.className) {
        if (!config.shine || target.children[q].className !== _shine.className) {
          target.children[q].style[transformProp] = 'translateZ(' + config.child3D + 'px)';
        }
      }
    }
  }

  function enter() {
    if (config.hoverClass && config.hoverInClass) {
      target.className += ' ' + config.hoverClass + ' ' + config.hoverInClass;
      setTimeout(function () {
        target.className = removeClass(target.className, config.hoverInClass);
      }, 1000);
    } else if (config.hoverClass) {
      target.className += ' ' + config.hoverClass;
    } else if (config.hoverInClass) {
      target.className += ' ' + config.hoverInClass;
      setTimeout(function () {
        target.className = removeClass(target.className, config.hoverInClass);
      }, 1000);
    }
  }

  function move(e) {
    var w = container.offsetWidth;
    var h = container.offsetHeight;
    var rect = target.getBoundingClientRect();
    var ox = touch ? e.touches[0].clientX - rect.left : e.offsetX;
    var oy = touch ? e.touches[0].clientY - rect.top : e.offsetY;
    var ax = config.invert ? -(w / 2 - ox) / sensitivity : (w / 2 - ox) / sensitivity;
    var ay = config.invert ? (h / 2 - oy) / sensitivity : -(h / 2 - oy) / sensitivity;
    var dy = oy - h / 2;
    var dx = ox - w / 2;
    var theta = Math.atan2(dy, dx);
    var ang = theta * (180 / Math.PI) - 90;
    var angle = ang < 0 ? ang + 360 : ang;

    if (config.scale) {
      target.style[transformProp] = 'rotateY(' + ax + 'deg) rotateX(' + ay + 'deg) scale3d(1.05, 1.05, 1.05)';
    } else {
      target.style[transformProp] = 'rotateY(' + ax + 'deg) rotateX(' + ay + 'deg)';
    }

    if (config.shadow) {
      _shadow.style[boxShadowProp] = '0 24px 48px rgba(14, 21, 47, 0.4), 0 12px 24px rgba(14, 21, 47, 0.4)';
    }

    if (config.shine) {
      _shine.style.opacity = 1;
      _shine.style.backgroundImage = 'linear-gradient(' + angle + 'deg, rgba(230, 230, 230, ' + oy / h * 0.5 + ') 0%, transparent 80%)';
    }
  }

  function leave() {
    if (config.shadow) {
      _shadow.style[boxShadowProp] = '0 8px 30px rgba(14, 21, 47, 0.6)';
    }

    if (!config.persist) {
      target.style[transformProp] = 'rotateX(0deg) rotateY(0deg)';

      if (config.shine) {
        _shine.style.opacity = 0;
      }
    }

    if (config.hoverClass && config.hoverOutClass) {
      target.className += ' ' + config.hoverOutClass;
      target.className = removeClass(target.className, config.hoverClass);
      setTimeout(function () {
        target.className = removeClass(target.className, config.hoverOutClass);
      }, 1000);
    } else if (config.hoverClass) {
      target.className = removeClass(target.className, config.hoverClass);
    } else if (config.hoverOutClass) {
      target.className += ' ' + config.hoverOutClass;
      setTimeout(function () {
        target.className = removeClass(target.className, config.hoverOutClass);
      }, 1000);
    }
  }

  if (touch) {
    container.addEventListener('touchstart', function () {
      if (!_prevent_scroll) {
        _prevent_scroll = true;
      }

      return enter();
    });
    container.addEventListener('touchmove', function (e) {
      if (!!_prevent_scroll) {
        e.preventDefault();
      }

      return move(e);
    });
    container.addEventListener('touchend', function () {
      if (!!_prevent_scroll) {
        window.preventScroll = false;
      }

      return leave();
    });
  } else {
    container.addEventListener('mouseenter', function () {
      return enter();
    });
    container.addEventListener('mousemove', function (e) {
      return move(e);
    });
    container.addEventListener('mouseleave', function () {
      return leave();
    });
  }
}

function getProp(props) {
  var i = props.length;
  var j = 0;

  for (; i > j; j++) {
    if (typeof document.body.style[props[j]] !== 'undefined') {
      return props[j];
    }
  }

  return null;
}

function getUnit(t) {
  if (typeof t !== 'number') {
    console.warn('Please provide a numeric value');
    return '0.2s';
  } else if (t > 1 && t <= 50) {
    return '0.' + t + 's';
  } else if (t > 50) {
    return t + 'ms';
  } else {
    return t + 's';
  }
}

function getTFunc(tf) {
  var tfl = tf.length;

  if (tf.constructor !== Array) {
    console.warn('Bad input: expected array');
    return 'none';
  } else if (tfl === 4) {
    if (typeof tf[0] === 'number' && typeof tf[1] === 'number' && typeof tf[2] === 'number' && typeof tf[3] === 'number') {
      return 'cubic-bezier(' + tf[0] + ', ' + tf[1] + ', ' + tf[2] + ', ' + tf[3] + ')';
    } else {
      console.warn('Bad input: expected numbers');
      return 'none';
    }
  } else {
    console.warn('Bad input: expected four values');
    return 'none';
  }
}

function removeClass(cssClasses, cssClass) {
  var rxp = new RegExp(cssClass + '\\s*', 'gi');
  return cssClasses.replace(rxp, '').replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
}
/**
 * 日夜模式 - 加载
 */


function initTheme() {
  var darkThemeSelected = localStorage.getItem('darkSwitch') !== null && localStorage.getItem('darkSwitch') === 'dark';
  darkSwitch.checked = darkThemeSelected;

  if (darkThemeSelected) {
    document.body.setAttribute('data-theme', 'dark');
    document.querySelector('.dark-switch-label-span').innerHTML = '<i class="fas fa-sun"></i>';
  } else {
    document.body.removeAttribute('data-theme');
    document.querySelector('.dark-switch-label-span').innerHTML = '<i class="fas fa-moon"></i>';
  }
}
/**
 * 日夜模式 - 重置
 */


function resetTheme() {
  if (darkSwitch.checked) {
    document.body.setAttribute('data-theme', 'dark');
    document.querySelector('.dark-switch-label-span').innerHTML = '<i class="fas fa-sun"></i>';
    localStorage.setItem('darkSwitch', 'dark');
  } else {
    document.body.removeAttribute('data-theme');
    document.querySelector('.dark-switch-label-span').innerHTML = '<i class="fas fa-moon"></i>';
    localStorage.removeItem('darkSwitch');
  }
}
/**
 * 是否在页面最顶部
 * @returns {boolean} true = 是在页面顶部
 */


function isScrollTop() {
  return $(document).scrollTop() <= 0;
}
/**
 * 页面初始化要执行的事件
 */


function initPage() {
  $(function () {
    //初始化顶栏透明
    isScrollTop() ? addTopNav() : removeTopNav(); //滚动顶栏透明

    $(window).scroll(function () {
      isScrollTop() ? addTopNav() : removeTopNav();
    }); // 移动端点击菜单按钮添加样式

    $('.navbar-toggler').click(function (event) {
      if ($(this).attr('aria-expanded') === 'false') {
        if (isScrollTop()) {
          $('nav.navbar').removeClass(['navbar-dark', 'top-nav']).addClass('navbar-light');
        }

        $('html').addClass('overflow-hidden');
      } else {
        if (isScrollTop()) {
          $('nav.navbar').addClass(['navbar-dark', 'top-nav']).removeClass('navbar-light');
        }

        $('html').removeClass('overflow-hidden');
      }
    }); // 回到顶部

    var returnTop = $('#return-to-top');
    $(window).scroll(function () {
      if ($(this).scrollTop() >= 50) {
        returnTop.addClass('bounceInRight').removeClass('bounceOutDown');
      } else {
        returnTop.removeClass('bounceInRight').addClass('bounceOutDown');
      }
    });
    returnTop.click(function () {
      $('body,html').animate({
        scrollTop: 0
      }, 500);
    });
  });
  /**
   * 文章列表动效
   */

  pivot.init({
    selector: '.site-post-list .post-card-image-link',
    sensitivity: 80,
    touch: false
  });

  if (document.querySelector('.post-content pre code') !== null) {
    //Prism高亮支持
    if (typeof window.Prism === 'undefined') {
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadCSS"])('//cdn.jsdelivr.net/npm/prismjs@1.15.0/themes/prism-tomorrow.min.css');
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/prismjs/components/prism-core.min.js', function () {
        Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/prismjs/plugins/autoloader/prism-autoloader.min.js', function () {
          //将html代码块支持高亮
          $('.post-content pre code').attr('class', function (i, clazz) {
            if (clazz !== undefined) {
              return clazz.replace(/language-html/g, 'language-markup');
            }
          }); //设置高亮语言样式文件地址

          if (window.Prism !== 'undefined') {
            Prism.plugins.autoloader.languages_path = '//cdn.jsdelivr.net/npm/prismjs/components/';
            Prism.highlightAll();
          }
        });
      }); //行号

      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadCSS"])('//cdn.jsdelivr.net/npm/prismjs/plugins/line-numbers/prism-line-numbers.min.css');
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/prismjs/plugins/line-numbers/prism-line-numbers.min.js'); //支持行号显示

      $('.post-content pre').addClass('line-numbers'); //显示语言或者粘贴

      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadCSS"])('//cdn.jsdelivr.net/npm/prismjs/plugins/toolbar/prism-toolbar.min.css');
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/prismjs/plugins/toolbar/prism-toolbar.min.js');
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/prismjs/plugins/show-language/prism-show-language.min.js');
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/clipboard/dist/clipboard.min.js');
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.min.js');
    } else {
      //将html代码块支持高亮
      $('.post-content pre code').attr('class', function (i, clazz) {
        if (clazz !== undefined) {
          return clazz.replace(/language-html/g, 'language-markup');
        }
      }); //设置高亮语言样式文件地址

      if (window.Prism !== 'undefined') {
        Prism.plugins.autoloader.languages_path = '//cdn.jsdelivr.net/npm/prismjs/components/';
        Prism.highlightAll();
      } //支持行号显示


      $('.post-content pre').addClass('line-numbers');
    }
  }
  /**
   * 图箱支持
   */


  if ($('.post-content img').length !== 0) {
    var initConfig = function () {
      var zoom = mediumZoom(document.querySelectorAll('.post-content img'), {
        background: '#fff'
      });
      zoom.on('open', function (event) {});
      zoom.detach('img.kg-bookmark-icon', '.kg-bookmark-thumbnail img');
    };

    if (typeof window.mediumZoom === 'undefined') {
      Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["loadScript"])('//cdn.jsdelivr.net/npm/medium-zoom/dist/medium-zoom.min.js', function () {
        initConfig();
      });
    } else {
      initConfig();
    }
  }
  /**
   * 日夜切换
   */


  var darkSwitch = document.getElementById('darkSwitch');

  if (darkSwitch) {
    initTheme();
    darkSwitch.addEventListener('change', function (event) {
      resetTheme();
    });
  }
  /**
   * 添加导航样式
   */


  function addTopNav() {
    $('nav.navbar').addClass('top-nav').addClass('navbar-dark').removeClass('navbar-light');
  }
  /**
   * 移除导航样式
   */


  function removeTopNav() {
    $('nav.navbar').removeClass('top-nav').removeClass('navbar-dark').addClass('navbar-light');
  }
  /**
   * 弹窗提醒
   */


  if (!Boolean(localStorage.noPopUp)) {
    $('#toast').toast({
      autohide: true,
      delay: 5000
    }).toast('show');
    $('#toast .close').click(function () {
      localStorage.setItem('noPopUp', true);
    });
  } else {
    $('#toast').toast('hide');
  }
} // 页面初始化执行


$(document).ready(function () {
  initPage();
}); // app.js

/**
 * 分页业务 - 过程
 */

function pagination(currentPage, pageCount) {
  var range = [];
  var delta = 2;

  for (var i = Math.max(2, currentPage - delta); i <= Math.min(pageCount - 1, currentPage + delta); i++) {
    range.push(i);
  }

  if (currentPage - delta > 2) range.unshift('...');
  if (currentPage + delta < pageCount - 1) range.push('...');
  range.unshift(1);
  range.push(pageCount);
  return range;
}
/**
 * 分页业务 - 创建
 */


function createPagination() {
  var url = window.location.href;
  var currPageElm = document.querySelector('.curr-page');
  var totalPagesElm = document.querySelector('.total-pages');
  if (!currPageElm || !totalPagesElm) return;
  var currentPage = Number.parseInt(currPageElm.textContent, 10);
  var totalPages = Number.parseInt(totalPagesElm.textContent, 10);
  var paginationElm = document.querySelector('.pagination');
  var paginationPrev = document.querySelector('.page-item');

  if (totalPages > 1) {
    var paginationItems = [];
    var paginationArr = pagination(currentPage, totalPages);
    paginationArr.forEach(function (pagElm) {
      var urlArray = url.split('/');

      if (pagElm === currentPage) {
        paginationItems.push('<li class="page-item active"><span class="page-link">' + pagElm + '</span></li>');
      } else if (typeof pagElm === 'number') {
        if (urlArray[urlArray.length - 3] === 'page') {
          url = url.replace(/\/page\/.*$/, '') + '/';
        }

        paginationItems.push('<li class="page-item"><a class="page-link" href="' + url + 'page/' + pagElm + '/" aria-label="第' + pagElm + '页">' + pagElm + '</a></li>');
      } else {
        paginationItems.push('<li class="page-item ellipsis"><a class="page-link">...</a></li>');
      }
    });

    if (paginationPrev !== null) {
      currentPage === 1 ? paginationPrev.insertAdjacentHTML('beforebegin', paginationItems.join('')) : paginationPrev.insertAdjacentHTML('afterend', paginationItems.join(''));
    }
  } else if (paginationElm != null) {
    paginationElm.style.display = 'none';
  }
}
/**
 * 监听点击链接时间，非本站链接进行新标签打开
 */


function watchSiteLink() {
  $(document).on('click', 'a', function (event) {
    var link = event.target.href; // 完整链接

    var host = event.target.hostname;

    if (/^https?:\/\/(([a-zA-Z0-9_-])+(\.)?)*(:\d+)?(\/((\.)?(\?)?=?&?[a-zA-Z0-9_-](\?)?)*)*$/i.test(link)) {
      if (host !== window.location.hostname) {
        event.preventDefault();
        window.open(event.target.href);
      }
    }
  });
} // 打印动态加载的资源


window.onload = function () {
  Object(_js_utils_index__WEBPACK_IMPORTED_MODULE_3__["logDynamicLoadFiles"])();
};

(function ($) {
  $(document).ready(function () {
    // 百度统计
    if (_config_index__WEBPACK_IMPORTED_MODULE_0__["default"].baiduTongji) {
      Object(_Baidu__WEBPACK_IMPORTED_MODULE_1__["initBaiduTongji"])();
    } // 评论


    if (_config_index__WEBPACK_IMPORTED_MODULE_0__["default"].valineOptions) {
      Object(_Comment__WEBPACK_IMPORTED_MODULE_2__["initValine"])(_config_index__WEBPACK_IMPORTED_MODULE_0__["default"].valineOptions);
    } // 监听点击链接时间，非本站链接进行新标签打开


    watchSiteLink();
    createPagination();
  });
})(jQuery);

/***/ }),

/***/ "./src/js/utils/index.js":
/*!*******************************!*\
  !*** ./src/js/utils/index.js ***!
  \*******************************/
/*! exports provided: loadScript, loadCSS, logDynamicLoadFiles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadScript", function() { return loadScript; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadCSS", function() { return loadCSS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "logDynamicLoadFiles", function() { return logDynamicLoadFiles; });
/**
 * @name: 全局工具js
 * @author: SunSeekerX
 * @Date: 2020-05-28 17:23:25
 * @LastEditors: SunSeekerX
 * @LastEditTime: 2020-05-29 14:08:47
 */
const loadFiles = {
  js: [],
  css: []
};
/**
 * 动态加载JS文件的方法
 * Load javascript file method
 *
 * @param {String}   fileName              JS文件名
 * @param {Function} [callback=function()] 加载成功后执行的回调函数
 * @param {String}   [into='head']         嵌入页面的位置
 */

function loadScript(fileName, callback = () => {}, into = 'body') {
  const script = document.createElement('script');
  script.type = 'text/javascript';
  script.src = fileName;

  script.onload = function () {
    loadFiles.js.push(fileName);
    callback();
  };

  if (into === 'head') {
    document.getElementsByTagName('head')[0].appendChild(script);
  } else {
    document.body.appendChild(script);
  }
}
/**
 * 动态加载CSS文件的方法
 * Load css file method
 *
 * @param {String}   fileName              CSS文件名
 * @param {Function} [callback=function()] 加载成功后执行的回调函数
 * @param {String}   [into='head']         嵌入页面的位置
 */

function loadCSS(fileName, callback = () => {}, into = 'body') {
  const css = document.createElement('link');
  css.type = 'text/css';
  css.rel = 'stylesheet';

  css.onload = css.onreadystatechange = () => {
    loadFiles.css.push(fileName);
    callback();
  };

  css.href = fileName;

  if (into === 'head') {
    document.getElementsByTagName('head')[0].appendChild(css);
  } else {
    document.body.appendChild(css);
  }
}
/**
 * @name 打印动态加载的资源
 */

function logDynamicLoadFiles() {
  console.log('已经动态加载资源：', loadFiles);
}

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map